<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="6905" started-at="2020-08-01T07:11:13 IST" finished-at="2020-08-01T07:11:20 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="6905" started-at="2020-08-01T07:11:13 IST" finished-at="2020-08-01T07:11:20 IST">
      <class name="com.mba.web.TestWebAutomation">
        <test-method status="PASS" signature="appiumDriverInitialization()[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="appiumDriverInitialization" is-config="true" duration-ms="30244" started-at="2020-08-01T07:10:43 IST" finished-at="2020-08-01T07:11:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appiumDriverInitialization -->
        <test-method status="PASS" signature="reset()[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="reset" is-config="true" duration-ms="146" started-at="2020-08-01T07:11:13 IST" finished-at="2020-08-01T07:11:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reset -->
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="startReport" is-config="true" duration-ms="160" started-at="2020-08-01T07:11:13 IST" finished-at="2020-08-01T07:11:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="12" started-at="2020-08-01T07:11:14 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[FEATURE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_ID]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TC_DESCRIPTION]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OBJECT_KEY]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ACTION_KEY]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[OBJECT_GROUP]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[CONTROL_FLAG]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[COUNTRY_ID]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[ ASSERTION_TYPE]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[ASSERTION_DATA]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[STATUS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="568" started-at="2020-08-01T07:11:14 IST" finished-at="2020-08-01T07:11:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="558" started-at="2020-08-01T07:11:14 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Navigating to 'https://www.w3schools.com/angular/tryit.asp?filename=try_ng_validate_email' URL and navigation Validation]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[INPUTFIELD]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="390" started-at="2020-08-01T07:11:15 IST" finished-at="2020-08-01T07:11:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="81" started-at="2020-08-01T07:11:15 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_002]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate the default message is displayed correct]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[STATUS_FLAG_XPATH]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[single]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.mba.commons.assertEngine.AssertEngine.assertMapping(AssertEngine.java:15)
at com.mba.commons.dataMapping.ActionMapping.actionMappingWeb(ActionMapping.java:70)
at com.mba.commons.dataMapping.ObjectGroups.actionOnElementsWeb(ObjectGroups.java:49)
at com.mba.web.TestWebAutomation.gettingDashboard(TestWebAutomation.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="347" started-at="2020-08-01T07:11:15 IST" finished-at="2020-08-01T07:11:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=FAILURE method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="265" started-at="2020-08-01T07:11:16 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_003]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the valid input email format to the input field]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POSITIVE_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="387" started-at="2020-08-01T07:11:16 IST" finished-at="2020-08-01T07:11:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="124" started-at="2020-08-01T07:11:16 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the invalid input email format to the invalid field format date]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_01_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.mba.commons.assertEngine.AssertEngine.assertMapping(AssertEngine.java:15)
at com.mba.commons.dataMapping.ActionMapping.actionMappingWeb(ActionMapping.java:70)
at com.mba.commons.dataMapping.ObjectGroups.actionOnElementsWeb(ObjectGroups.java:43)
at com.mba.web.TestWebAutomation.gettingDashboard(TestWebAutomation.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="306" started-at="2020-08-01T07:11:17 IST" finished-at="2020-08-01T07:11:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=FAILURE method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="254" started-at="2020-08-01T07:11:17 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_005]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the invalid input email format only with only numerics to the input field]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_02_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="461" started-at="2020-08-01T07:11:17 IST" finished-at="2020-08-01T07:11:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="194" started-at="2020-08-01T07:11:18 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_006]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the invalid input email format only with only alphabets to the input field]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_03_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="445" started-at="2020-08-01T07:11:18 IST" finished-at="2020-08-01T07:11:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="266" started-at="2020-08-01T07:11:18 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_007]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the in valid input email format only with only special characters to the input field]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_04_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="390" started-at="2020-08-01T07:11:18 IST" finished-at="2020-08-01T07:11:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=SUCCESS method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="177" started-at="2020-08-01T07:11:19 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_008]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the in valid input email format only without .com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_05_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.mba.commons.assertEngine.AssertEngine.assertMapping(AssertEngine.java:15)
at com.mba.commons.dataMapping.ActionMapping.actionMappingWeb(ActionMapping.java:70)
at com.mba.commons.dataMapping.ObjectGroups.actionOnElementsWeb(ObjectGroups.java:43)
at com.mba.web.TestWebAutomation.gettingDashboard(TestWebAutomation.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="307" started-at="2020-08-01T07:11:19 IST" finished-at="2020-08-01T07:11:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=FAILURE method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="gettingDashboard" duration-ms="70" started-at="2020-08-01T07:11:19 IST" data-provider="UI_SAMPLE" finished-at="2020-08-01T07:11:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[UI_SAMPLE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TC_009]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Validate with the in valid input email format only without @]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[NEGATIVE_06_TEST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[NA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[multi]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[equals]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[[BLANK]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot find elements when the XPath is null.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot find elements when the XPath is null.
at org.openqa.selenium.By$ByXPath.<init>(By.java:339)
at org.openqa.selenium.By.xpath(By.java:92)
at com.mba.commons.reusableFunction.ReusableFunctionBrowser.webelementReturn(ReusableFunctionBrowser.java:221)
at com.mba.commons.dataMapping.ActionMapping.actionMappingWeb(ActionMapping.java:51)
at com.mba.commons.dataMapping.ObjectGroups.actionOnElementsWeb(ObjectGroups.java:43)
at com.mba.web.TestWebAutomation.gettingDashboard(TestWebAutomation.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gettingDashboard -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="getResult" is-config="true" duration-ms="332" started-at="2020-08-01T07:11:19 IST" finished-at="2020-08-01T07:11:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=gettingDashboard status=FAILURE method=TestWebAutomation.gettingDashboard(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mba.web.TestWebAutomation@281e3708] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="endReport" is-config="true" duration-ms="358" started-at="2020-08-01T07:11:20 IST" finished-at="2020-08-01T07:11:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="closeOpenItems()[pri:0, instance:com.mba.web.TestWebAutomation@281e3708]" name="closeOpenItems" is-config="true" duration-ms="74" started-at="2020-08-01T07:11:20 IST" finished-at="2020-08-01T07:11:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOpenItems -->
      </class> <!-- com.mba.web.TestWebAutomation -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
